package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"

	generated "notezy-backend/app/graphql/generated"
	gqlmodels "notezy-backend/app/graphql/models"
)

// SearchUsers is the resolver for the searchUsers field.
func (r *queryResolver) SearchUsers(ctx context.Context, input gqlmodels.SearchableUserInput) (*gqlmodels.SearchableUserConnection, error) {
	result, exception := r.userService.SearchPublicUsers(ctx, input)
	if exception != nil {
		return nil, exception.ToGraphQLError(ctx)
	}
	return result, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	type QueryResolverInterface interface {
	SearchUsers(ctx context.Context, input gqlmodels.SearchableUserInput) (*gqlmodels.SearchableUserConnection, error)
}
type QueryResolver struct{ *Resolver }
func (r *QueryResolver) SearchUsers(ctx context.Context, input gqlmodels.SearchableUserInput) (*gqlmodels.SearchableUserConnection, error) {
	result, exception := r.userService.SearchPublicUsers(ctx, input)
	if exception != nil {
		return nil, exception.ToGraphQLError(ctx)
	}
	return result, nil
}
*/
